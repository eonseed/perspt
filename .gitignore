## File system
.DS_Store
desktop.ini

# Ignore saved conversation
conversation*.txt

## Tool
.valgrindrc
.cargo
# Included because it is part of the test case
!/tests/run-make/thumb-none-qemu/example/.cargo

## Configuration
/config.toml
/Makefile
config.mk
config.stamp
no_llvm_build
logs/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

## Build
# Generated by Cargo
# will have compiled files and executables
debug/
target/
/dl/
/doc/
/inst/
/llvm/
/mingw-build/
build/
!/compiler/rustc_mir_build/src/build/
/build-rust-analyzer/
/dist/
/unicode-downloads
/target
/library/target
/src/bootstrap/target
/src/tools/x/target
# Created by default with `src/ci/docker/run.sh`
/obj/
# Created by nix dev shell / .envrc
src/tools/nix-dev-shell/flake.lock

## ICE reports
rustc-ice-*.txt

## Temporary files
*~
\#*
\#*\#
.#*

## Tags
tags
tags.*
TAGS
TAGS.*

# python generated files
__pycache__/
*.py[oc]
build/
dist/
wheels/
*.egg-info
docs/perspt_book/.python-version

# venv
.venv
docs/perspt_book/.venv

#Flask
instance/
.env
.aider*

# Documentation generated files
!docs/header.html
docs/generated/
docs/perspt_book/build*
docs/book/book/
target/doc/
*.html
*.css.bak
*.js.bak

# mdBook generated files
book/
book.toml.bak

# Rustdoc custom assets (generated)
docs/header.html.bak
docs/custom.css.bak

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# Temporary documentation files
docs/temp/
*.tmp.md
