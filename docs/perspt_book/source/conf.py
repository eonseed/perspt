# Configuration file for the Sphinx documentation builder.
#
# For the full list of built-in configuration values, see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

import os
import sys

# -- Project information -----------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#project-information

project = 'Perspt'
copyright = '2025, Ronak Rathore, Vikrant Rathore'
author = 'Ronak Rathore, Vikrant Rathore'
release = '0.4.4'
version = '0.4.4'

# -- General configuration ---------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#general-configuration

extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.viewcode',
    'sphinx.ext.napoleon',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.ifconfig',
    'sphinx.ext.githubpages',
    'myst_parser',
    'sphinx_copybutton',
    'sphinx_design',
    'sphinx_tabs.tabs',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# The suffix(es) of source filenames.
source_suffix = {
    '.rst': None,
    '.md': 'myst_parser',
}

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
language = 'en'

# -- Development configuration -----------------------------------------------

# Show todos in output for development builds
todo_include_todos = True

# Keep warnings as warnings (don't turn them into errors for development)
suppress_warnings = [
    'myst.title_to_header',  # Suppress MyST title warnings during development
]

# Enable parallel reading and writing for faster builds
numfigs = True
numfig_format = {
    'figure': 'Figure %s',
    'table': 'Table %s',
    'code-block': 'Listing %s',
    'section': 'Section %s',
}

# Better source file change detection for autobuild
html_use_smartypants = True
html_copy_source = True
html_show_sourcelink = True

# -- Options for HTML output -------------------------------------------------
# https://www.sphinx-doc.org/en/master/usage/configuration.html#options-for-html-output

html_theme = 'furo'
html_title = f"{project} v{version}"
html_logo = None  # Add path to logo if available

# Theme options are theme-specific and customize the look and feel of a theme
html_theme_options = {
    "sidebar_hide_name": True,
    "light_css_variables": {
        "color-brand-primary": "#2563eb",
        "color-brand-content": "#2563eb",
        "color-admonition-background": "transparent",
    },
    "dark_css_variables": {
        "color-brand-primary": "#60a5fa",
        "color-brand-content": "#60a5fa",
        "color-admonition-background": "transparent",
    },
    "source_repository": "https://github.com/yourusername/perspt",
    "source_branch": "main",
    "source_directory": "docs/perspt_book/source/",
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Get absolute path to font directory
font_dir = os.path.abspath(os.path.join(
    os.path.dirname(__file__), '_static/fonts'))
font_dir = font_dir.replace('\\', '/') # Convert to forward slashes for LaTeX

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
html_sidebars = {
    "**": [
        "sidebar/scroll-start.html",
        "sidebar/brand.html",
        "sidebar/search.html",
        "sidebar/navigation.html",
        "sidebar/ethical-ads.html",
        "sidebar/scroll-end.html",
    ]
}

# -- Options for LaTeX output ------------------------------------------------

latex_engine = 'lualatex'  # LuaHBLaTeX for excellent Unicode and emoji support
latex_elements = {
    'papersize': 'letterpaper',
    'pointsize': '10pt',
    'preamble': r'''
% XeLaTeX Unicode and font configuration
\usepackage{fontspec}
\usepackage{unicode-math}

% Font selection with Unicode support
\setmainfont{Times New Roman}[
    Ligatures=TeX,
]
\setsansfont{Helvetica Neue}[
    Scale=0.9,
    Ligatures=TeX,
]
\setmonofont{Menlo}[
    Scale=0.85,
]

% Color definitions
\usepackage{xcolor}
\definecolor{TitleColor}{RGB}{37, 99, 235}
\definecolor{AccentColor}{RGB}{99, 102, 241}

% Title formatting
\usepackage{titlesec}
\titleformat{\chapter}[display]
  {\normalfont\huge\bfseries\color{TitleColor}}
  {\chaptertitlename\ \thechapter}{20pt}{\Huge}
\titleformat{\section}
  {\normalfont\Large\bfseries\color{TitleColor}}
  {\thesection}{1em}{}
\titleformat{\subsection}
  {\normalfont\large\bfseries\color{AccentColor}}
  {\thesubsection}{1em}{}

% Better spacing and typography
\usepackage{microtype}
\usepackage{enumitem}
\setlist{nosep}

% Increase list nesting depth limits to handle deeply nested code structures
% Configure enumitem to allow deeper nesting
\setlistdepth{9}

% Configure description list formatting for deeper nesting
\setlist[description,1]{leftmargin=\parindent,labelindent=\parindent}
\setlist[description,2]{leftmargin=2\parindent,labelindent=2\parindent}
\setlist[description,3]{leftmargin=3\parindent,labelindent=3\parindent}
\setlist[description,4]{leftmargin=4\parindent,labelindent=4\parindent}
\setlist[description,5]{leftmargin=5\parindent,labelindent=5\parindent}
\setlist[description,6]{leftmargin=6\parindent,labelindent=6\parindent}
\setlist[description,7]{leftmargin=7\parindent,labelindent=7\parindent}
\setlist[description,8]{leftmargin=8\parindent,labelindent=8\parindent}
\setlist[description,9]{leftmargin=9\parindent,labelindent=9\parindent}

% Configure emoji fonts for Unicode emoji rendering
% Use system font with full path specification for XeLaTeX
\usepackage{newunicodechar}'''+f'''
\\newfontfamily\\emojifont{{NotoColorEmoji}}[
    Path={font_dir}/,
    Scale=1.0,
    Extension = .ttf,
    UprightFont=*
]'''+r'''
% Define all emojis used in documentation with primary font
\newunicodechar{🎉}{{\emojifont 🎉}}
\newunicodechar{🎨}{{\emojifont 🎨}}
\newunicodechar{🎯}{{\emojifont 🎯}}
\newunicodechar{🏗}{{\emojifont 🏗}}
\newunicodechar{🐌}{{\emojifont 🐌}}
\newunicodechar{👁}{{\emojifont 👁}}
\newunicodechar{📋}{{\emojifont 📋}}
\newunicodechar{📖}{{\emojifont 📖}}
\newunicodechar{📚}{{\emojifont 📚}}
\newunicodechar{📜}{{\emojifont 📜}}
\newunicodechar{📦}{{\emojifont 📦}}
\newunicodechar{🔀}{{\emojifont 🔀}}
\newunicodechar{🔄}{{\emojifont 🔄}}
\newunicodechar{🔒}{{\emojifont 🔒}}
\newunicodechar{🔗}{{\emojifont 🔗}}
\newunicodechar{🔧}{{\emojifont 🔧}}
\newunicodechar{🚀}{{\emojifont 🚀}}
\newunicodechar{🚫}{{\emojifont 🚫}}
\newunicodechar{🛠}{{\emojifont 🛠}}
\newunicodechar{🛡}{{\emojifont 🛡}}
\newunicodechar{🤖}{{\emojifont 🤖}}
\newunicodechar{🦀}{{\emojifont 🦀}}

% Additional common emojis that might be used
\newunicodechar{✨}{{\emojifont ✨}}
\newunicodechar{⚡}{{\emojifont ⚡}}
\newunicodechar{⚙}{{\emojifont ⚙}}

% Emoji command for manual usage
\newcommand{\emoji}[1]{{\emojifont #1}}
''',
    'fncychap': '\\usepackage[Bjornstrup]{fncychap}',
    'printindex': '\\footnotesize\\raggedright\\printindex',
}

latex_documents = [
    (master_doc, 'perspt.tex', 'Perspt Documentation',
     'Ronak Rathore, Vikrant Rathore', 'manual'),
]

# -- Options for manual page output ------------------------------------------

man_pages = [
    (master_doc, 'perspt', 'Perspt Documentation',
     [author], 1)
]

# -- Options for Texinfo output ----------------------------------------------

texinfo_documents = [
    (master_doc, 'Perspt', 'Perspt Documentation',
     author, 'Perspt', 'Your Terminal\'s Window to the AI World.',
     'Miscellaneous'),
]

# -- Extension configuration -------------------------------------------------

# -- Options for intersphinx extension ---------------------------------------

intersphinx_mapping = {
    'python': ('https://docs.python.org/3', None),
    # Note: Rust docs don't provide stable inventory, so we'll disable it for now
    # 'rust': ('https://doc.rust-lang.org/stable/', None),
}

# -- Options for todo extension ----------------------------------------------

todo_include_todos = True

# Napoleon settings
napoleon_google_docstring = True
napoleon_numpy_docstring = True
napoleon_include_init_with_doc = False
napoleon_include_private_with_doc = False
napoleon_include_special_with_doc = True
napoleon_use_admonition_for_examples = False
napoleon_use_admonition_for_notes = False
napoleon_use_admonition_for_references = False
napoleon_use_ivar = False
napoleon_use_param = True
napoleon_use_rtype = True
napoleon_preprocess_types = False
napoleon_type_aliases = None
napoleon_attr_annotations = True

# MyST parser configuration
myst_enable_extensions = [
    "colon_fence",
    "deflist",
    "dollarmath",
    "fieldlist",
    "html_admonition",
    "html_image",
    "linkify",
    "replacements",
    "smartquotes",
    "strikethrough",
    "substitution",
    "tasklist",
]

# Sphinx-copybutton configuration
copybutton_prompt_text = r">>> |\.\.\. |\$ |In \[\d*\]: | {2,5}\.\.\.: | {5,8}: "
copybutton_prompt_is_regexp = True
